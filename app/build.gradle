plugins {
    alias(libs.plugins.com.android.application)
    alias(libs.plugins.org.jetbrains.kotlin.android)
    alias(libs.plugins.compose.compiler)
}

InputStream inputStream = rootProject.file('local.properties').newDataInputStream()
Properties properties = new Properties()
properties.load(inputStream)

android {
    compileSdk 36
    namespace 'io.github.iplanetcn.app.fruits'
    testNamespace 'io.github.iplanetcn.app.fruits.test'

    defaultConfig {
        applicationId "io.github.iplanetcn.app.fruits"
        minSdk 23
        targetSdk 36
        versionCode 10100
        versionName "1.1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        flavorDimensions = ['enviroment']
    }

    productFlavors {
        develop {
            dimension 'enviroment'
            applicationIdSuffix '.develop'
        }

        product {
            dimension 'enviroment'
        }
    }

    signingConfigs {
        debug {
            storeFile file(properties.getProperty("DEBUG_KEY_STORE_FILE_PATH"))
            keyAlias properties.getProperty("DEBUG_KEY_ALIAS")
            keyPassword properties.getProperty("DEBUG_KEY_PASSWORD")
            storePassword properties.getProperty("DEBUG_STORE_PASSWORD")
        }

        release {
            storeFile file(properties.getProperty("KEY_STORE_FILE_PATH"))
            keyAlias properties.getProperty("KEY_ALIAS")
            keyPassword properties.getProperty("KEY_PASSWORD")
            storePassword properties.getProperty("STORE_PASSWORD")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlin {
        jvmToolchain(17)
    }
    buildFeatures {
        compose = true
        buildConfig = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.compose.compiler.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    bundle {
        storeArchive {
            enable = false
        }
    }
}

dependencies {
    implementation platform(libs.androidx.compose.bom)
    implementation libs.bundles.compose
    implementation libs.androidx.core.ktx
    implementation libs.androidx.core.splashscreen
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.appcompat
    implementation libs.androidx.core.google.shortcuts
    implementation libs.startup.runtime
    implementation libs.material
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android
    implementation libs.kotlin.reflect
    implementation libs.gson
    testImplementation libs.junit
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.espresso.core
    androidTestImplementation libs.androidx.compose.ui.test.junit4
}